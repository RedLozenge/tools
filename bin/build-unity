#!/bin/bash

BASE_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )"/../.. && pwd )"
BUILD_LOG="build.log"
VERBOSE=""
TARGET="iOS"
VALID_TARGETS="(iOS|WebPlayer|Android)"

# Android specific stuff
APK_FILE="habitmonster.apk"
RESIGN_APK_SETTINGS=""

function usage() {
    echo "$0 [-v] [-t ${VALID_TARGETS}]"
    echo
    echo "Options:"
    echo "    -h    how you get this message"
    echo "    -t    explicitly set build target"
    echo "    -v    be verbose"
    exit 0
}

function err() {
    echo "$@" 1>&2
}

pushd "${BASE_PATH}" &> /dev/null

tools/bin/ensure-unity-is-closed
if [ $? -ne 0 ]; then
    echo "error: unity is still running, aborting build."
    exit 1
fi

while getopts "hvt:" OPT; do
    case "$OPT" in
        v)
            VERBOSE="true"
            ;;
        t)
            echo "${OPTARG}" | egrep -o "^${VALID_TARGETS}$" &> /dev/null ; RESULT=$?
            if [ $RESULT -ne 0 ]; then
                err "Invalid build target: ${OPTARG}"
                usage
            fi
            TARGET="${OPTARG}"
            ;;
        h)
            usage
            ;;
        \?)
            usage
            exit 1
            ;;
    esac
done

if [ ! -z "${VERBOSE}" ]; then
    set -x
fi

# Remove old build log
rm "${BUILD_LOG}" &> /dev/null || true

# Execute Unity build
echo "building Xcode project from Unity..."
/Applications/Unity/Unity.app/Contents/MacOS/Unity \
    -batchmode \
    -quit \
    -logFile "${BUILD_LOG}" \
    -projectPath "${BASE_PATH}/" \
    -executeMethod "BuildScript.Perform${TARGET}Build"

# Check to see if built properly... in a gross way, since Unity doesn't
# believe in error codes.
grep "Completed 'Build.Player." "${BUILD_LOG}" &> /dev/null
UNITY_BUILD_STATUS=$?

if [ ! -z "${VERBOSE}" ]; then
    cat "${BUILD_LOG}"
fi

# Check build status
if [ $UNITY_BUILD_STATUS -ne 0 ]; then
    # Check to see if the build failed because don't have UnityPro, give notice
    # and exit
    grep "requires Unity PRO" "${BUILD_LOG}" &> /dev/null
    if [ $? -eq 0 ]; then
        err "warning: cannot build from the command line because you aren't using Unity Pro."
        err "         continuing anyway."
        exit 0
    fi

    err "error: build failed, see log file '${BUILD_LOG}'"
    exit 1
fi

echo "build succeeded"
exit 0
